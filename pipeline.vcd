$date
	Mon Jul 28 17:24:34 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module pipeline_processor_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module uut $end
$var wire 1 # clk $end
$var wire 16 $ instruction [15:0] $end
$var wire 4 % opcode [3:0] $end
$var wire 4 & rd [3:0] $end
$var wire 8 ' reg_data1 [7:0] $end
$var wire 8 ( reg_data2 [7:0] $end
$var wire 1 ) reset $end
$var wire 4 * rs1 [3:0] $end
$var wire 4 + rs2 [3:0] $end
$var reg 4 , EX_WB_dest [3:0] $end
$var reg 8 - EX_WB_result [7:0] $end
$var reg 16 . ID_EX [15:0] $end
$var reg 16 / IF_ID [15:0] $end
$var reg 4 0 PC [3:0] $end
$var reg 8 1 alu_result [7:0] $end
$var integer 32 2 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
1)
bx (
bx '
bx &
bx %
bx $
0#
1"
0!
$end
#5000
b0 0
b1000100100011 $
1!
1#
#10000
0!
0#
0"
0)
#15000
b1 %
b1 &
b10 '
b10 *
b11 (
b11 +
b0 1
b1 0
b10010000010010 $
b1000100100011 /
1!
1#
#20000
0!
0#
#25000
b10 %
b100 &
b1 '
b1 *
b10 (
b10 +
b0 -
b1000100100011 .
b10 0
b11010100001001 $
b10010000010010 /
1!
1#
#30000
0!
0#
#35000
b11 %
b101 &
b0 '
b0 *
b1001 (
b1001 +
b1 ,
b101 1
b10010000010010 .
b11 0
b1011001010101 $
b11010100001001 /
1!
1#
#40000
0!
0#
#45000
b1 %
b110 &
b101 '
b101 *
b101 (
b101 +
b100 ,
b101 -
b11111111 1
b11010100001001 .
b100 0
bx $
b1011001010101 /
1!
1#
#50000
0!
0#
#55000
bx %
bx &
bx '
bx *
bx (
bx +
b101 ,
b11111111 -
b1001 1
b1011001010101 .
b101 0
bx /
1!
1#
#60000
0!
0#
#65000
b110 ,
b1001 -
b1010 1
bx .
b110 0
1!
1#
#70000
0!
0#
#75000
bx ,
b1010 -
b0 1
b111 0
1!
1#
#80000
0!
0#
#85000
b0 -
b1000 0
1!
1#
#90000
0!
0#
#95000
b1001 0
1!
1#
#100000
0!
0#
#105000
b1010 0
1!
1#
#110000
0!
0#
